# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

VAGRANT_BOX         = "kalilinux/rolling"
VAGRANT_BOX_VERSION = "2024.3.1"
CPUS_MASTER_NODE    = 2
CPUS_WORKER_NODE    = 1
MEMORY_MASTER_NODE  = 2048
MEMORY_WORKER_NODE  = 1024
WORKER_NODES_COUNT  = 2

Vagrant.configure(2) do |config|
  # Boot strap sequence for all VM's - commented for specific VM changes
  #config.vm.provision "shell", path: "bootstrap.sh"

  # Master Server
  config.vm.define "kali" do |node|
  
    node.vm.box               = VAGRANT_BOX
    node.vm.box_check_update  = false
    node.vm.box_version       = VAGRANT_BOX_VERSION
    node.vm.hostname          = "kali.example.com"
    #node.vm.provision "shell", path: "bootstrap.sh"
    node.vm.network "private_network", ip: "172.16.16.100"
    node.vm.network "public_network"

    node.vm.provider :virtualbox do |v|
      v.name    = "kali"
      v.memory  = MEMORY_MASTER_NODE
      v.cpus    = CPUS_MASTER_NODE
    end
  
    node.vm.provider :libvirt do |v|
      v.memory  = MEMORY_MASTER_NODE
      v.nested  = true
      v.cpus    = CPUS_MASTER_NODE
    end
    # Boot strap sequence for kali 
    # node.vm.provision "shell", path: "bootstrap.sh"
  
  end

    ### - Windows target - chose for windows 11 and 10

    VAGRANT_BOX_TARGET         = "gusztavvargadr/windows-10"
    VAGRANT_BOX_VERSION_TARGET = "2202.0.2409"

    #VAGRANT_BOX_TARGET         = "gusztavvargadr/windows-11"
    #VAGRANT_BOX_VERSION_TARGET = "2302.0.2409"
    
    #CPUS_MASTER_NODE_TARGET    = 2
    CPUS_WORKER_NODE_TARGET    = 4
    #MEMORY_MASTER_NODE_TARGET  = 2048
    MEMORY_WORKER_NODE_TARGET  = 4096
    WORKER_NODES_COUNT_TARGET  = 1

  # Target Nodes
  (1..WORKER_NODES_COUNT).each do |i|

    config.vm.define "windows#{i}" do |node|

      node.vm.box               = VAGRANT_BOX_TARGET
      node.vm.box_check_update  = false
      node.vm.box_version       = VAGRANT_BOX_VERSION_TARGET
      node.vm.hostname          = "windows#{i}"
      # commented because of winRM error  
      # Add IP only after provision??? ---> might be?
      #node.vm.network "private_network", ip: "172.16.16.10#{i}"
      node.vm.network "public_network"

      node.vm.provider :virtualbox do |v|
        v.name    = "windows#{i}"
        v.memory  = MEMORY_WORKER_NODE_TARGET
        v.cpus    = CPUS_WORKER_NODE_TARGET
      end

      node.vm.provider :libvirt do |v|
        v.memory  = MEMORY_WORKER_NODE_TARGET
        v.nested  = true
        v.cpus    = CPUS_WORKER_NODE_TARGET
      end
      # Boot strap sequence for worker 
      # node.vm.provision "shell", path: "bootstrap.sh"
      #config.winrm.transport = :plaintext
      config.winrm.basic_auth_only = true

      # provisioning
      #config.vm.provision "shell", path: "WindowsScripts/keyboard.ps1", privileged: false
      #config.vm.provision "shell", path: "WindowsScripts/network.ps1", privileged: false
      #config.vm.provision "shell", path: "WindowsScripts/debloat.ps1", privileged: false
      #config.vm.provision "shell", path: "WindowsScripts/install-npp.ps1", privileged: false
      #config.vm.provision "shell", path: "WindowsScripts/install-firefox.ps1", privileged: false
      #config.vm.provision "shell", path: "WindowsScripts/install-chrome.ps1", privileged: false
      #config.vm.provision "shell", reboot: true

    end

  end

end
